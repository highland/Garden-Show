#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    Dec 21, 2022 07:01:30 PM GMT  platform: Windows NT

import sys
import tkinter as tk

import entryform

_debug = True  # False to eliminate debug printing from callback functions.


def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol('WM_DELETE_WINDOW', root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = entryform.Toplevel1(_top1)
    root.mainloop()


def check_existing_exibitor(event):
    name = event.widget.get()
    # TODO Create exhibitor from name and check with model


    if _debug:
        print('entryform_support.check_existing_exibitor')
        print(name)
        sys.stdout.flush()


def clear_all(*args):
    if _debug:
        print('entryform_support.clear_all')
        for arg in args:
            print('    another arg:', arg)
        sys.stdout.flush()


def create_entry(*args):
    if _debug:
        print('entryform_support.create_entry')
        for arg in args:
            print('    another arg:', arg)
        sys.stdout.flush()


def create_exhibitor(*args):
    if _debug:
        print('entryform_support.create_exhibitor')
        for arg in args:
            print('    another arg:', arg)
        sys.stdout.flush()


def delete_entry(*args):
    if _debug:
        print('entryform_support.delete_entry')
        for arg in args:
            print('    another arg:', arg)
        sys.stdout.flush()


def entry_selected(*args):
    if _debug:
        print('entryform_support.entry_selected')
        for arg in args:
            print('    another arg:', arg)
        sys.stdout.flush()


def post_to_model(*args):
    if _debug:
        print('entryform_support.post_to_model')
        for arg in args:
            print('    another arg:', arg)
        sys.stdout.flush()


def replace_current_entry(*args):
    if _debug:
        print('entryform_support.replace_current_entry')
        for arg in args:
            print('    another arg:', arg)
        sys.stdout.flush()


def set_description(*args):
    if _debug:
        print('entryform_support.set_description')
        for arg in args:
            print('    another arg:', arg)
        sys.stdout.flush()


if __name__ == '__main__':
    entryform.start_up()
